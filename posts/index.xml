<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 养眼的赵旭东</title>
    <link>https://13802-hub.github.io/posts/</link>
    <description>Recent content in Posts on 养眼的赵旭东</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Oct 2020 13:05:17 +0800</lastBuildDate><atom:link href="https://13802-hub.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue中使用swiper</title>
      <link>https://13802-hub.github.io/2020/vue%E4%B8%AD%E4%BD%BF%E7%94%A8swiper/</link>
      <pubDate>Thu, 01 Oct 2020 13:05:17 +0800</pubDate>
      
      <guid>https://13802-hub.github.io/2020/vue%E4%B8%AD%E4%BD%BF%E7%94%A8swiper/</guid>
      <description>Vue中使用swiper 完成移动端轮播图的基本使用 1. 说明  在vue中实现轮播需要安装基于swiper的vue-awesome-swiper,不同的版本的vue-awesome-swiper对应不同的swiper,所以swiper里面的属性多数能应用到vue-awesome-swiper中，也可以根据swiper文档来设置vue-awesome-swiper属性； swiper挂网：https://www.swiper.com.cn/，  2. 安装 npm i swiper --save //安装swiper 默认最新版 npm i vue-awesome-swiper --save // 安装vue-awesome-swiper 3. 引入   引入方式有两种
  在main.js文件中全局引入
import VueAwesomeSwiper from &amp;#39;vue-awesome-swiper&amp;#39; import &amp;#39;swiper/dist/css/swiper.css&amp;#39; Vue.use(VueAwesomeSwiper)   在组件中引入
import { Swiper, SwiperSlide } from &amp;#34;vue-awesome-swiper&amp;#34;; import &amp;#34;swiper/swiper-bundle.css&amp;#34;; export default { name: &amp;#34;swiper&amp;#34;, components:{ Swiper, SwiperSlide },     4. 轮播图 &amp;lt;template&amp;gt; &amp;lt;div&amp;gt; &amp;lt;section class=&amp;#34;swiper&amp;#34;&amp;gt; &amp;lt;swiper :options=&amp;#34;swiperOption&amp;#34;&amp;gt; &amp;lt;swiper-slide class=&amp;#34;swp-silde&amp;#34; v-for=&amp;#34;item in swiperList&amp;#34; :key=&amp;#34;item.</description>
    </item>
    
    <item>
      <title>Css外链引入方式</title>
      <link>https://13802-hub.github.io/2020/css%E5%A4%96%E9%93%BE%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Tue, 29 Sep 2020 16:02:13 +0800</pubDate>
      
      <guid>https://13802-hub.github.io/2020/css%E5%A4%96%E9%93%BE%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F/</guid>
      <description>Css外链引入方式 @import 与link的区别  @import方式  &amp;lt;style type=&amp;#34;text/css&amp;#34; media=&amp;#34;screen&amp;#34;&amp;gt; @import url(&amp;#34;http://www.taobao.com/home/css/global/v2.0.css?t=20070518.css&amp;#34;); &amp;lt;/style&amp;gt;  link方式  &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; rev=&amp;#34;stylesheet&amp;#34; href=&amp;#34;default.css&amp;#34; type=&amp;#34;text/css&amp;#34; media=&amp;#34;all&amp;#34; /&amp;gt; link与import的作用相同
唯一不同的就是服务对象不同
 @import为css服务 link是为当前页面服务  @import与link的区别
  根源不同
 link属于HTML标签,而@import完全是css提供的一种方式 link标签除了可以加载css外,还可以做很多其它的事情，比如定义RSS，定义rel连接属性等，@import就只能加载css    加载顺序不同
 当一个页面被加载时侯,link引用的css会被同时加载,而@import引用的css会等到页面全部被下载完再被加载。所以有时候浏览@import加载css的页面时开始会没有样式（就是闪烁），网速慢的时候还挺明显。    使用DOM控制样式时差别
 当使用JavaScript控制DOM去改变样式的时候，只能使用link标签，因为@import不是DOM可以控制的。    @import可以在css中再次引入其他样式表
 比如创建一个主样式表,在主样式表中引入其他样式表如:  @import &amp;#39;sub1.css&amp;#39;; @import &amp;#39;sub2.css&amp;#39;;   </description>
    </item>
    
    <item>
      <title>First</title>
      <link>https://13802-hub.github.io/2020/first/</link>
      <pubDate>Sat, 26 Sep 2020 14:47:16 +0800</pubDate>
      
      <guid>https://13802-hub.github.io/2020/first/</guid>
      <description>我的第一篇博客  经过我的不懈努力终于成功上传第一篇博客 ,可喜可贺 加油.  </description>
    </item>
    
  </channel>
</rss>
